package com.siwuxie095.spring.cloud.chapter1st.example7th;

/**
 * @author Jiajing Li
 * @date 2021-05-09 22:37:13
 */
public class Main {

    /**
     * 云到底是什么
     *
     * 术语 "云" 已经被过度使用了。每个软件供应商都有云，每个软件供应商的平台都是支持云的，但是如果穿透这些
     * 天花乱坠的广告宣传，就会发现云计算有三种基本模式。它们是：
     * （1）基础设施即服务（Infrastructure as a Service，IaaS）；
     * （2）平台即服务（Platform as a Service，PaaS）；
     * （3）软件即服务（Software as a Service，SaaS）。
     *
     * 为了更好地理解这些概念，下面将每天做饭的任务映射到不同的云计算模型中。当你想吃饭时，你有四种选择：
     * （1）内部自建（On premise）：在家做饭；
     * （2）基础设施即服务（IaaS）：去食品杂货店买一顿预先做好的膳食，然后你加热并享用它；
     * （3）平台即服务（PaaS）：叫外卖送到家里；
     * （4）软件即服务（SaaS）：开车去餐厅吃饭。
     *
     * 这些选择之间的区别是谁负责烹饪这些膳食，以及在哪里烹饪。在内部自建模型中，想要在家里吃饭就需要自己做
     * 所有的工作，还要使用家里面的烤箱和食材。商店购买的食物就像使用基础设施即服务（IaaS）计算模型一样，
     * 使用店内的厨师和烤箱预先烘烤餐点，但你仍然有责任加热膳食并在家里吃（然后清洗餐具）。
     *
     * 在平台即服务（PaaS）模型中，你仍然需要负责烹饪膳食，但同时依靠供应商来负责与膳食制作相关的核心任务。
     * 例如，在 PaaS 模型中，你提供盘子和家具，但餐厅老板提供烤箱、食材和厨师来做饭。在软件即服务（SaaS）
     * 模型中，你去到一家餐厅，在那里，所有食物都已为你准备好。你在餐厅吃饭，然后在吃完后买单，你也不需要
     * 自己去准备或清洗餐具。
     *
     * 每个模型中的关键项都是控制：由谁来负责维护基础设施，以及构建应用程序的技术选择是什么？在 IaaS 模型中，
     * 云供应商提供基础设施，但你需要选择技术并构建最终的解决方案；而在 SaaS 模型中，你就是供应商所提供的服
     * 务的被动消费者，无法对技术进行选择，同时也没有任何责任来维护应用程序的基础设施。
     *
     *
     * PS：新兴的云平台
     *
     * 这里已经介绍了目前正在使用的三种核心云平台类型（即 IaaS、PaaS 和 SaaS）。然而，新的云平台类型正在
     * 出现。这些新平台包括 "函数即服务"（Functions as a Service，FaaS）和 "容器即服务"（Container
     * as a Service，CaaS）。基于 FaaS 的应用程序会使用像亚马逊的 Lambda 技术和 Google Cloud 函数这
     * 样的设施，应用会将代码块以 "无服务器"（serverless）的形式部署，这些代码会完全在云提供商的平台计算
     * 设施上运行。使用 FaaS 平台，无需管理任何服务器基础设施，只需支付执行函数所需的计算周期。
     *
     * 使用容器即服务模型，开发人员将微服务作为便携式虚拟容器（如 Docker）进行构建并部署到云供应商。与 IaaS
     * 模型不同，使用 IaaS 的开发人员必须管理部署服务的虚拟机，而 CaaS 则是将服务部署在轻量级的虚拟容器中。
     * 云供应商会提供运行容器的虚拟服务器，以及用于构建、部署、监控和伸缩容器的综合工具。亚马逊的弹性容器服
     * 务（Amazon’s Elastic Container Service，Amazon ECS）就是一个基于 CaaS 平台的例子。
     *
     * 需要重点注意的是，使用云计算的 FaaS 和 CaaS 模型，开发人员仍然可以构建基于微服务的架构。请记住，微
     * 服务概念的重点在于构建有限职责的小型服务，并使用基于 HTTP 的接口进行通信。新兴的云计算平台（如 FaaS
     * 和 CaaS）是部署微服务的替代基础设施机制。
     */
    public static void main(String[] args) {

    }

}
